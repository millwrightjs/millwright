'use strict';

var path = require('path');
var _ = require('lodash');
var pathExists = require('path-exists').sync;
var requireDir = require('require-dir');
var plugins = requireDir('../plugins', { camelcase: true });
var cache = require('../utils/cache');

module.exports = cacheImport;

function cacheImport(files) {
  _.forEach(files, function (file) {
    _.forEach(file.mapImports, function (source) {
      var resolved = path.resolve(source);
      if (pathExists(resolved)) {
        cache.push('deps', {
          src: source,
          srcResolved: resolved,
          consumer: file.srcResolved
        });

        var cached = cache.get('files', resolved);

        if (cached) {
          cached.role = cached.role || 'import';
        } else {
          cache.set('files', 'srcResolved', plugins.normalizeBase(source));
        }
      }
    });
  });
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9wbHVnaW5zL2NhY2hlLWltcG9ydC5qcyJdLCJuYW1lcyI6WyJwYXRoIiwicmVxdWlyZSIsIl8iLCJwYXRoRXhpc3RzIiwic3luYyIsInJlcXVpcmVEaXIiLCJwbHVnaW5zIiwiY2FtZWxjYXNlIiwiY2FjaGUiLCJtb2R1bGUiLCJleHBvcnRzIiwiY2FjaGVJbXBvcnQiLCJmaWxlcyIsImZvckVhY2giLCJmaWxlIiwibWFwSW1wb3J0cyIsInJlc29sdmVkIiwicmVzb2x2ZSIsInNvdXJjZSIsInB1c2giLCJzcmMiLCJzcmNSZXNvbHZlZCIsImNvbnN1bWVyIiwiY2FjaGVkIiwiZ2V0Iiwicm9sZSIsInNldCIsIm5vcm1hbGl6ZUJhc2UiXSwibWFwcGluZ3MiOiI7O0FBQUEsSUFBTUEsT0FBT0MsUUFBUSxNQUFSLENBQWI7QUFDQSxJQUFNQyxJQUFJRCxRQUFRLFFBQVIsQ0FBVjtBQUNBLElBQU1FLGFBQWFGLFFBQVEsYUFBUixFQUF1QkcsSUFBMUM7QUFDQSxJQUFNQyxhQUFhSixRQUFRLGFBQVIsQ0FBbkI7QUFDQSxJQUFNSyxVQUFVRCxXQUFXLFlBQVgsRUFBeUIsRUFBQ0UsV0FBVyxJQUFaLEVBQXpCLENBQWhCO0FBQ0EsSUFBTUMsUUFBUVAsUUFBUSxnQkFBUixDQUFkOztBQUVBUSxPQUFPQyxPQUFQLEdBQWlCQyxXQUFqQjs7QUFFQSxTQUFTQSxXQUFULENBQXFCQyxLQUFyQixFQUE0QjtBQUMxQlYsSUFBRVcsT0FBRixDQUFVRCxLQUFWLEVBQWlCLGdCQUFRO0FBQ3ZCVixNQUFFVyxPQUFGLENBQVVDLEtBQUtDLFVBQWYsRUFBMkIsa0JBQVU7QUFDbkMsVUFBTUMsV0FBV2hCLEtBQUtpQixPQUFMLENBQWFDLE1BQWIsQ0FBakI7QUFDQSxVQUFJZixXQUFXYSxRQUFYLENBQUosRUFBMEI7QUFDeEJSLGNBQU1XLElBQU4sQ0FBVyxNQUFYLEVBQW1CO0FBQ2pCQyxlQUFLRixNQURZO0FBRWpCRyx1QkFBYUwsUUFGSTtBQUdqQk0sb0JBQVVSLEtBQUtPO0FBSEUsU0FBbkI7O0FBTUEsWUFBTUUsU0FBU2YsTUFBTWdCLEdBQU4sQ0FBVSxPQUFWLEVBQW1CUixRQUFuQixDQUFmOztBQUVBLFlBQUlPLE1BQUosRUFBWTtBQUNWQSxpQkFBT0UsSUFBUCxHQUFjRixPQUFPRSxJQUFQLElBQWUsUUFBN0I7QUFDRCxTQUZELE1BRU87QUFDTGpCLGdCQUFNa0IsR0FBTixDQUFVLE9BQVYsRUFBbUIsYUFBbkIsRUFBa0NwQixRQUFRcUIsYUFBUixDQUFzQlQsTUFBdEIsQ0FBbEM7QUFDRDtBQUNGO0FBQ0YsS0FqQkQ7QUFrQkQsR0FuQkQ7QUFvQkQiLCJmaWxlIjoiY2FjaGUtaW1wb3J0LmpzIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgcGF0aCA9IHJlcXVpcmUoJ3BhdGgnKTtcbmNvbnN0IF8gPSByZXF1aXJlKCdsb2Rhc2gnKTtcbmNvbnN0IHBhdGhFeGlzdHMgPSByZXF1aXJlKCdwYXRoLWV4aXN0cycpLnN5bmM7XG5jb25zdCByZXF1aXJlRGlyID0gcmVxdWlyZSgncmVxdWlyZS1kaXInKTtcbmNvbnN0IHBsdWdpbnMgPSByZXF1aXJlRGlyKCcuLi9wbHVnaW5zJywge2NhbWVsY2FzZTogdHJ1ZX0pO1xuY29uc3QgY2FjaGUgPSByZXF1aXJlKCcuLi91dGlscy9jYWNoZScpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGNhY2hlSW1wb3J0O1xuXG5mdW5jdGlvbiBjYWNoZUltcG9ydChmaWxlcykge1xuICBfLmZvckVhY2goZmlsZXMsIGZpbGUgPT4ge1xuICAgIF8uZm9yRWFjaChmaWxlLm1hcEltcG9ydHMsIHNvdXJjZSA9PiB7XG4gICAgICBjb25zdCByZXNvbHZlZCA9IHBhdGgucmVzb2x2ZShzb3VyY2UpO1xuICAgICAgaWYgKHBhdGhFeGlzdHMocmVzb2x2ZWQpKSB7XG4gICAgICAgIGNhY2hlLnB1c2goJ2RlcHMnLCB7XG4gICAgICAgICAgc3JjOiBzb3VyY2UsXG4gICAgICAgICAgc3JjUmVzb2x2ZWQ6IHJlc29sdmVkLFxuICAgICAgICAgIGNvbnN1bWVyOiBmaWxlLnNyY1Jlc29sdmVkXG4gICAgICAgIH0pO1xuXG4gICAgICAgIGNvbnN0IGNhY2hlZCA9IGNhY2hlLmdldCgnZmlsZXMnLCByZXNvbHZlZCk7XG5cbiAgICAgICAgaWYgKGNhY2hlZCkge1xuICAgICAgICAgIGNhY2hlZC5yb2xlID0gY2FjaGVkLnJvbGUgfHwgJ2ltcG9ydCc7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgY2FjaGUuc2V0KCdmaWxlcycsICdzcmNSZXNvbHZlZCcsIHBsdWdpbnMubm9ybWFsaXplQmFzZShzb3VyY2UpKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH0pO1xuICB9KTtcbn1cbiJdfQ==