'use strict';

var path = require('path');
var fs = require('fs-extra');
var _ = require('lodash');

var configPath = path.join(process.cwd(), 'millwright.json');
var config = _.attemptSilent(fs.readJsonSync, configPath);

var defaults = {};
defaults.defaultCommand = 'dev';
defaults.srcDir = 'src';
defaults.destDir = 'dest';
defaults.partialsDir = 'partials';
defaults.lambdasDir = 'lambdas';
defaults.assetIgnoredBasePaths = ['bower_components', 'node_modules'];
defaults.templateTags = ['{[{', '}]}'];

var defaultsCustom = _.assign({}, defaults, config);

// Test environment overrides
if (process.env.MILL_TEST === 'TRUE') {
  defaultsCustom.defaultCommand = process.env.MILL_TEST_CMD;
  defaultsCustom.srcDir = process.env.MILL_TEST_SRC;
  defaultsCustom.destDir = process.env.MILL_TEST_DEST;
}

defaultsCustom.assetIgnoredBasePaths.push(defaultsCustom.srcDir);
defaultsCustom.partialsDir = path.join(defaultsCustom.srcDir, defaultsCustom.partialsDir);
defaultsCustom.lambdasDir = path.join(defaultsCustom.srcDir, defaultsCustom.lambdasDir);

module.exports = defaultsCustom;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9jb25maWcuanMiXSwibmFtZXMiOlsicGF0aCIsInJlcXVpcmUiLCJmcyIsIl8iLCJjb25maWdQYXRoIiwiam9pbiIsInByb2Nlc3MiLCJjd2QiLCJjb25maWciLCJhdHRlbXB0U2lsZW50IiwicmVhZEpzb25TeW5jIiwiZGVmYXVsdHMiLCJkZWZhdWx0Q29tbWFuZCIsInNyY0RpciIsImRlc3REaXIiLCJwYXJ0aWFsc0RpciIsImxhbWJkYXNEaXIiLCJhc3NldElnbm9yZWRCYXNlUGF0aHMiLCJ0ZW1wbGF0ZVRhZ3MiLCJkZWZhdWx0c0N1c3RvbSIsImFzc2lnbiIsImVudiIsIk1JTExfVEVTVCIsIk1JTExfVEVTVF9DTUQiLCJNSUxMX1RFU1RfU1JDIiwiTUlMTF9URVNUX0RFU1QiLCJwdXNoIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6Ijs7QUFBQSxJQUFNQSxPQUFPQyxRQUFRLE1BQVIsQ0FBYjtBQUNBLElBQU1DLEtBQUtELFFBQVEsVUFBUixDQUFYO0FBQ0EsSUFBTUUsSUFBSUYsUUFBUSxRQUFSLENBQVY7O0FBRUEsSUFBTUcsYUFBYUosS0FBS0ssSUFBTCxDQUFVQyxRQUFRQyxHQUFSLEVBQVYsRUFBeUIsaUJBQXpCLENBQW5CO0FBQ0EsSUFBTUMsU0FBU0wsRUFBRU0sYUFBRixDQUFnQlAsR0FBR1EsWUFBbkIsRUFBaUNOLFVBQWpDLENBQWY7O0FBRUEsSUFBTU8sV0FBVyxFQUFqQjtBQUNBQSxTQUFTQyxjQUFULEdBQTBCLEtBQTFCO0FBQ0FELFNBQVNFLE1BQVQsR0FBa0IsS0FBbEI7QUFDQUYsU0FBU0csT0FBVCxHQUFtQixNQUFuQjtBQUNBSCxTQUFTSSxXQUFULEdBQXVCLFVBQXZCO0FBQ0FKLFNBQVNLLFVBQVQsR0FBc0IsU0FBdEI7QUFDQUwsU0FBU00scUJBQVQsR0FBaUMsQ0FBQyxrQkFBRCxFQUFxQixjQUFyQixDQUFqQztBQUNBTixTQUFTTyxZQUFULEdBQXdCLENBQUMsS0FBRCxFQUFRLEtBQVIsQ0FBeEI7O0FBRUEsSUFBTUMsaUJBQWlCaEIsRUFBRWlCLE1BQUYsQ0FBUyxFQUFULEVBQWFULFFBQWIsRUFBdUJILE1BQXZCLENBQXZCOztBQUVBO0FBQ0EsSUFBSUYsUUFBUWUsR0FBUixDQUFZQyxTQUFaLEtBQTBCLE1BQTlCLEVBQXNDO0FBQ3BDSCxpQkFBZVAsY0FBZixHQUFnQ04sUUFBUWUsR0FBUixDQUFZRSxhQUE1QztBQUNBSixpQkFBZU4sTUFBZixHQUF3QlAsUUFBUWUsR0FBUixDQUFZRyxhQUFwQztBQUNBTCxpQkFBZUwsT0FBZixHQUF5QlIsUUFBUWUsR0FBUixDQUFZSSxjQUFyQztBQUNEOztBQUVETixlQUFlRixxQkFBZixDQUFxQ1MsSUFBckMsQ0FBMENQLGVBQWVOLE1BQXpEO0FBQ0FNLGVBQWVKLFdBQWYsR0FBNkJmLEtBQUtLLElBQUwsQ0FBVWMsZUFBZU4sTUFBekIsRUFBaUNNLGVBQWVKLFdBQWhELENBQTdCO0FBQ0FJLGVBQWVILFVBQWYsR0FBNEJoQixLQUFLSyxJQUFMLENBQVVjLGVBQWVOLE1BQXpCLEVBQWlDTSxlQUFlSCxVQUFoRCxDQUE1Qjs7QUFFQVcsT0FBT0MsT0FBUCxHQUFpQlQsY0FBakIiLCJmaWxlIjoiY29uZmlnLmpzIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgcGF0aCA9IHJlcXVpcmUoJ3BhdGgnKTtcbmNvbnN0IGZzID0gcmVxdWlyZSgnZnMtZXh0cmEnKTtcbmNvbnN0IF8gPSByZXF1aXJlKCdsb2Rhc2gnKTtcblxuY29uc3QgY29uZmlnUGF0aCA9IHBhdGguam9pbihwcm9jZXNzLmN3ZCgpLCAnbWlsbHdyaWdodC5qc29uJyk7XG5jb25zdCBjb25maWcgPSBfLmF0dGVtcHRTaWxlbnQoZnMucmVhZEpzb25TeW5jLCBjb25maWdQYXRoKTtcblxuY29uc3QgZGVmYXVsdHMgPSB7fTtcbmRlZmF1bHRzLmRlZmF1bHRDb21tYW5kID0gJ2Rldic7XG5kZWZhdWx0cy5zcmNEaXIgPSAnc3JjJztcbmRlZmF1bHRzLmRlc3REaXIgPSAnZGVzdCc7XG5kZWZhdWx0cy5wYXJ0aWFsc0RpciA9ICdwYXJ0aWFscyc7XG5kZWZhdWx0cy5sYW1iZGFzRGlyID0gJ2xhbWJkYXMnO1xuZGVmYXVsdHMuYXNzZXRJZ25vcmVkQmFzZVBhdGhzID0gWydib3dlcl9jb21wb25lbnRzJywgJ25vZGVfbW9kdWxlcyddO1xuZGVmYXVsdHMudGVtcGxhdGVUYWdzID0gWyd7W3snLCAnfV19J107XG5cbmNvbnN0IGRlZmF1bHRzQ3VzdG9tID0gXy5hc3NpZ24oe30sIGRlZmF1bHRzLCBjb25maWcpO1xuXG4vLyBUZXN0IGVudmlyb25tZW50IG92ZXJyaWRlc1xuaWYgKHByb2Nlc3MuZW52Lk1JTExfVEVTVCA9PT0gJ1RSVUUnKSB7XG4gIGRlZmF1bHRzQ3VzdG9tLmRlZmF1bHRDb21tYW5kID0gcHJvY2Vzcy5lbnYuTUlMTF9URVNUX0NNRDtcbiAgZGVmYXVsdHNDdXN0b20uc3JjRGlyID0gcHJvY2Vzcy5lbnYuTUlMTF9URVNUX1NSQztcbiAgZGVmYXVsdHNDdXN0b20uZGVzdERpciA9IHByb2Nlc3MuZW52Lk1JTExfVEVTVF9ERVNUO1xufVxuXG5kZWZhdWx0c0N1c3RvbS5hc3NldElnbm9yZWRCYXNlUGF0aHMucHVzaChkZWZhdWx0c0N1c3RvbS5zcmNEaXIpO1xuZGVmYXVsdHNDdXN0b20ucGFydGlhbHNEaXIgPSBwYXRoLmpvaW4oZGVmYXVsdHNDdXN0b20uc3JjRGlyLCBkZWZhdWx0c0N1c3RvbS5wYXJ0aWFsc0Rpcik7XG5kZWZhdWx0c0N1c3RvbS5sYW1iZGFzRGlyID0gcGF0aC5qb2luKGRlZmF1bHRzQ3VzdG9tLnNyY0RpciwgZGVmYXVsdHNDdXN0b20ubGFtYmRhc0Rpcik7XG5cbm1vZHVsZS5leHBvcnRzID0gZGVmYXVsdHNDdXN0b207XG4iXX0=